{
  "version": 3,
  "sources": ["../../@taquito/beacon-wallet/src/errors.ts", "../../@taquito/beacon-wallet/src/version.ts", "../../@taquito/beacon-wallet/src/taquito-beacon-wallet.ts"],
  "sourcesContent": ["import { PermissionScope } from '@airgap/beacon-dapp';\nimport { PermissionDeniedError } from '@taquito/core';\n\n/**\n *  @category Error\n *  @description Error indicates the Beacon wallet not being initialized\n */\nexport class BeaconWalletNotInitialized extends PermissionDeniedError {\n  constructor() {\n    super();\n    this.name = 'BeaconWalletNotInitialized';\n    this.message =\n      'BeaconWallet needs to be initialized by calling `await BeaconWallet.requestPermissions({network: {type: \"chosen_network\"}})` first.';\n  }\n}\n\n/**\n *  @category Error\n *  @description Error indicates missing required persmission scopes\n */\nexport class MissingRequiredScopes extends PermissionDeniedError {\n  constructor(public readonly requiredScopes: PermissionScope[]) {\n    super();\n    this.name = 'MissingRequiredScopes';\n    this.message = `Required permissions scopes: ${requiredScopes.join(',')} were not granted.`;\n  }\n}\n", "\n// IMPORTANT: THIS FILE IS AUTO GENERATED! DO NOT MANUALLY EDIT OR CHECKIN!\nexport const VERSION = {\n    \"commitHash\": \"15732f9b7d575aa46427c94501fb8677a754b733\",\n    \"version\": \"17.1.1\"\n};\n", "/**\n * @packageDocumentation\n * @module @taquito/beacon-wallet\n */\n\nimport {\n  DAppClient,\n  DAppClientOptions,\n  RequestPermissionInput,\n  PermissionScope,\n  getDAppClientInstance,\n} from '@airgap/beacon-dapp';\nimport { BeaconWalletNotInitialized, MissingRequiredScopes } from './errors';\nimport {\n  createIncreasePaidStorageOperation,\n  createOriginationOperation,\n  createSetDelegateOperation,\n  createTransferOperation,\n  WalletDelegateParams,\n  WalletIncreasePaidStorageParams,\n  WalletOriginateParams,\n  WalletProvider,\n  WalletTransferParams,\n} from '@taquito/taquito';\n\nexport { VERSION } from './version';\nexport { BeaconWalletNotInitialized, MissingRequiredScopes } from './errors';\n\nexport class BeaconWallet implements WalletProvider {\n  public client: DAppClient;\n\n  constructor(options: DAppClientOptions) {\n    this.client = getDAppClientInstance(options);\n  }\n\n  private validateRequiredScopesOrFail(\n    permissionScopes: PermissionScope[],\n    requiredScopes: PermissionScope[]\n  ) {\n    const mandatoryScope = new Set(requiredScopes);\n\n    for (const scope of permissionScopes) {\n      if (mandatoryScope.has(scope)) {\n        mandatoryScope.delete(scope);\n      }\n    }\n\n    if (mandatoryScope.size > 0) {\n      throw new MissingRequiredScopes(Array.from(mandatoryScope));\n    }\n  }\n\n  async requestPermissions(request?: RequestPermissionInput) {\n    await this.client.requestPermissions(request);\n  }\n\n  async getPKH() {\n    const account = await this.client.getActiveAccount();\n    if (!account) {\n      throw new BeaconWalletNotInitialized();\n    }\n    return account.address;\n  }\n\n  async mapTransferParamsToWalletParams(params: () => Promise<WalletTransferParams>) {\n    let walletParams: WalletTransferParams;\n    await this.client.showPrepare();\n    try {\n      walletParams = await params();\n    } catch (err) {\n      await this.client.hideUI();\n      throw err;\n    }\n    return this.removeDefaultParams(\n      walletParams,\n      await createTransferOperation(this.formatParameters(walletParams))\n    );\n  }\n\n  async mapIncreasePaidStorageWalletParams(params: () => Promise<WalletIncreasePaidStorageParams>) {\n    let walletParams: WalletIncreasePaidStorageParams;\n    await this.client.showPrepare();\n    try {\n      walletParams = await params();\n    } catch (err) {\n      await this.client.hideUI();\n      throw err;\n    }\n    return this.removeDefaultParams(\n      walletParams,\n      await createIncreasePaidStorageOperation(this.formatParameters(walletParams))\n    );\n  }\n\n  async mapOriginateParamsToWalletParams(params: () => Promise<WalletOriginateParams>) {\n    let walletParams: WalletOriginateParams;\n    await this.client.showPrepare();\n    try {\n      walletParams = await params();\n    } catch (err) {\n      await this.client.hideUI();\n      throw err;\n    }\n    return this.removeDefaultParams(\n      walletParams,\n      await createOriginationOperation(this.formatParameters(walletParams))\n    );\n  }\n\n  async mapDelegateParamsToWalletParams(params: () => Promise<WalletDelegateParams>) {\n    let walletParams: WalletDelegateParams;\n    await this.client.showPrepare();\n    try {\n      walletParams = await params();\n    } catch (err) {\n      await this.client.hideUI();\n      throw err;\n    }\n    return this.removeDefaultParams(\n      walletParams,\n      await createSetDelegateOperation(this.formatParameters(walletParams))\n    );\n  }\n\n  formatParameters(params: any) {\n    if (params.fee) {\n      params.fee = params.fee.toString();\n    }\n    if (params.storageLimit) {\n      params.storageLimit = params.storageLimit.toString();\n    }\n    if (params.gasLimit) {\n      params.gasLimit = params.gasLimit.toString();\n    }\n    return params;\n  }\n\n  removeDefaultParams(\n    params: WalletTransferParams | WalletOriginateParams | WalletDelegateParams,\n    operatedParams: any\n  ) {\n    // If fee, storageLimit or gasLimit is undefined by user\n    // in case of beacon wallet, dont override it by\n    // defaults.\n    if (!params.fee) {\n      delete operatedParams.fee;\n    }\n    if (!params.storageLimit) {\n      delete operatedParams.storage_limit;\n    }\n    if (!params.gasLimit) {\n      delete operatedParams.gas_limit;\n    }\n    return operatedParams;\n  }\n\n  async sendOperations(params: any[]) {\n    const account = await this.client.getActiveAccount();\n    if (!account) {\n      throw new BeaconWalletNotInitialized();\n    }\n    const permissions = account.scopes;\n    this.validateRequiredScopesOrFail(permissions, [PermissionScope.OPERATION_REQUEST]);\n\n    const { transactionHash } = await this.client.requestOperation({ operationDetails: params });\n    return transactionHash;\n  }\n\n  /**\n   *\n   * @description Removes all beacon values from the storage. After using this method, this instance is no longer usable.\n   * You will have to instantiate a new BeaconWallet.\n   */\n  async disconnect() {\n    await this.client.destroy();\n  }\n\n  /**\n   *\n   * @description This method removes the active account from local storage by setting it to undefined.\n   */\n  async clearActiveAccount() {\n    await this.client.setActiveAccount();\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
