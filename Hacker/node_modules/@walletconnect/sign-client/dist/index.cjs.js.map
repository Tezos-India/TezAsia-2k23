{"version":3,"file":"index.cjs.js","sources":["../src/constants/client.ts","../src/constants/history.ts","../src/constants/proposal.ts","../src/constants/session.ts","../src/constants/engine.ts","../src/constants/pendingRequest.ts","../src/constants/verify.ts","../src/controllers/engine.ts","../src/controllers/proposal.ts","../src/controllers/session.ts","../src/controllers/pendingRequest.ts","../src/client.ts","../src/index.ts"],"sourcesContent":["import { SignClientTypes } from \"@walletconnect/types\";\n\nexport const SIGN_CLIENT_PROTOCOL = \"wc\";\nexport const SIGN_CLIENT_VERSION = 2;\nexport const SIGN_CLIENT_CONTEXT = \"client\";\n\nexport const SIGN_CLIENT_STORAGE_PREFIX = `${SIGN_CLIENT_PROTOCOL}@${SIGN_CLIENT_VERSION}:${SIGN_CLIENT_CONTEXT}:`;\n\nexport const SIGN_CLIENT_DEFAULT = {\n  name: SIGN_CLIENT_CONTEXT,\n  logger: \"error\",\n  controller: false,\n  relayUrl: \"wss://relay.walletconnect.com\",\n};\n\nexport const SIGN_CLIENT_EVENTS: Record<SignClientTypes.Event, SignClientTypes.Event> = {\n  session_proposal: \"session_proposal\",\n  session_update: \"session_update\",\n  session_extend: \"session_extend\",\n  session_ping: \"session_ping\",\n  session_delete: \"session_delete\",\n  session_expire: \"session_expire\",\n  session_request: \"session_request\",\n  session_request_sent: \"session_request_sent\",\n  session_event: \"session_event\",\n  proposal_expire: \"proposal_expire\",\n};\n\nexport const SIGN_CLIENT_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n","export const HISTORY_EVENTS = {\n  created: \"history_created\",\n  updated: \"history_updated\",\n  deleted: \"history_deleted\",\n  sync: \"history_sync\",\n};\n\nexport const HISTORY_CONTEXT = \"history\";\n\nexport const HISTORY_STORAGE_VERSION = \"0.3\";\n","import { THIRTY_DAYS } from \"@walletconnect/time\";\n\nexport const PROPOSAL_CONTEXT = \"proposal\";\n\nexport const PROPOSAL_EXPIRY = THIRTY_DAYS;\n\nexport const PROPOSAL_EXPIRY_MESSAGE = \"Proposal expired\";\n","import { SEVEN_DAYS } from \"@walletconnect/time\";\n\nexport const SESSION_CONTEXT = \"session\";\n\nexport const SESSION_EXPIRY = SEVEN_DAYS;\n","import { FIVE_MINUTES, ONE_DAY, SEVEN_DAYS, THIRTY_SECONDS } from \"@walletconnect/time\";\nimport { EngineTypes } from \"@walletconnect/types\";\n\nexport const ENGINE_CONTEXT = \"engine\";\n\nexport const ENGINE_RPC_OPTS: EngineTypes.RpcOptsMap = {\n  wc_sessionPropose: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1100,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1101,\n    },\n  },\n  wc_sessionSettle: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1102,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1103,\n    },\n  },\n  wc_sessionUpdate: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1104,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1105,\n    },\n  },\n  wc_sessionExtend: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1106,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1107,\n    },\n  },\n  wc_sessionRequest: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1108,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1109,\n    },\n  },\n  wc_sessionEvent: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1110,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1111,\n    },\n  },\n\n  wc_sessionDelete: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1112,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1113,\n    },\n  },\n  wc_sessionPing: {\n    req: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1114,\n    },\n    res: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1115,\n    },\n  },\n};\n\nexport const SESSION_REQUEST_EXPIRY_BOUNDARIES = {\n  min: FIVE_MINUTES,\n  max: SEVEN_DAYS,\n};\n","export const REQUEST_CONTEXT = \"request\";\n","export const METHODS_TO_VERIFY = [\"wc_sessionPropose\", \"wc_sessionRequest\", \"wc_authRequest\"];\n","import { EXPIRER_EVENTS, RELAYER_DEFAULT_PROTOCOL, RELAYER_EVENTS } from \"@walletconnect/core\";\n\nimport {\n  formatJsonRpcError,\n  formatJsonRpcRequest,\n  formatJsonRpcResult,\n  isJsonRpcError,\n  isJsonRpcRequest,\n  isJsonRpcResponse,\n  isJsonRpcResult,\n} from \"@walletconnect/jsonrpc-utils\";\nimport { FIVE_MINUTES } from \"@walletconnect/time\";\nimport {\n  EnginePrivate,\n  EngineTypes,\n  ExpirerTypes,\n  IEngine,\n  IEngineEvents,\n  JsonRpcTypes,\n  PendingRequestTypes,\n  Verify,\n  CoreTypes,\n  ProposalTypes,\n  RelayerTypes,\n  SessionTypes,\n} from \"@walletconnect/types\";\nimport {\n  calcExpiry,\n  createDelayedPromise,\n  engineEvent,\n  getInternalError,\n  getRequiredNamespacesFromNamespaces,\n  getSdkError,\n  isConformingNamespaces,\n  isExpired,\n  isSessionCompatible,\n  isUndefined,\n  isValidController,\n  isValidErrorReason,\n  isValidEvent,\n  isValidId,\n  isValidNamespaces,\n  isValidNamespacesChainId,\n  isValidNamespacesEvent,\n  isValidNamespacesRequest,\n  isValidObject,\n  isValidParams,\n  isValidRelay,\n  isValidRelays,\n  isValidRequest,\n  isValidRequestExpiry,\n  hashMessage,\n  isBrowser,\n  isValidRequiredNamespaces,\n  isValidResponse,\n  isValidString,\n  parseExpirerTarget,\n  TYPE_1,\n} from \"@walletconnect/utils\";\nimport EventEmmiter from \"events\";\nimport {\n  ENGINE_CONTEXT,\n  ENGINE_RPC_OPTS,\n  PROPOSAL_EXPIRY_MESSAGE,\n  SESSION_EXPIRY,\n  SESSION_REQUEST_EXPIRY_BOUNDARIES,\n  METHODS_TO_VERIFY,\n} from \"../constants\";\n\nexport class Engine extends IEngine {\n  public name = ENGINE_CONTEXT;\n\n  private events: IEngineEvents = new EventEmmiter();\n  private initialized = false;\n  private ignoredPayloadTypes = [TYPE_1];\n\n  constructor(client: IEngine[\"client\"]) {\n    super(client);\n  }\n\n  public init: IEngine[\"init\"] = async () => {\n    if (!this.initialized) {\n      await this.cleanup();\n      this.registerRelayerEvents();\n      this.registerExpirerEvents();\n      this.client.core.pairing.register({ methods: Object.keys(ENGINE_RPC_OPTS) });\n      this.initialized = true;\n    }\n  };\n\n  // ---------- Public ------------------------------------------------ //\n\n  public connect: IEngine[\"connect\"] = async (params) => {\n    this.isInitialized();\n    const connectParams = {\n      ...params,\n      requiredNamespaces: params.requiredNamespaces || {},\n      optionalNamespaces: params.optionalNamespaces || {},\n    };\n    await this.isValidConnect(connectParams);\n    const { pairingTopic, requiredNamespaces, optionalNamespaces, sessionProperties, relays } =\n      connectParams;\n    let topic = pairingTopic;\n    let uri: string | undefined;\n    let active = false;\n\n    if (topic) {\n      const pairing = this.client.core.pairing.pairings.get(topic);\n      active = pairing.active;\n    }\n\n    if (!topic || !active) {\n      const { topic: newTopic, uri: newUri } = await this.client.core.pairing.create();\n      topic = newTopic;\n      uri = newUri;\n    }\n\n    const publicKey = await this.client.core.crypto.generateKeyPair();\n\n    const proposal = {\n      requiredNamespaces,\n      optionalNamespaces,\n      relays: relays ?? [{ protocol: RELAYER_DEFAULT_PROTOCOL }],\n      proposer: {\n        publicKey,\n        metadata: this.client.metadata,\n      },\n      ...(sessionProperties && { sessionProperties }),\n    };\n    const {\n      reject,\n      resolve,\n      done: approval,\n    } = createDelayedPromise<SessionTypes.Struct>(FIVE_MINUTES, PROPOSAL_EXPIRY_MESSAGE);\n    this.events.once<\"session_connect\">(\n      engineEvent(\"session_connect\"),\n      async ({ error, session }) => {\n        if (error) reject(error);\n        else if (session) {\n          session.self.publicKey = publicKey;\n          const completeSession = {\n            ...session,\n            requiredNamespaces: session.requiredNamespaces,\n            optionalNamespaces: session.optionalNamespaces,\n          };\n          await this.client.session.set(session.topic, completeSession);\n          await this.setExpiry(session.topic, session.expiry);\n          if (topic) {\n            await this.client.core.pairing.updateMetadata({\n              topic,\n              metadata: session.peer.metadata,\n            });\n          }\n          resolve(completeSession);\n        }\n      },\n    );\n\n    if (!topic) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `connect() pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n\n    const id = await this.sendRequest(topic, \"wc_sessionPropose\", proposal);\n\n    const expiry = calcExpiry(FIVE_MINUTES);\n    await this.setProposal(id, { id, expiry, ...proposal });\n    return { uri, approval };\n  };\n\n  public pair: IEngine[\"pair\"] = async (params) => {\n    this.isInitialized();\n    return await this.client.core.pairing.pair(params);\n  };\n\n  public approve: IEngine[\"approve\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidApprove(params);\n    const { id, relayProtocol, namespaces, sessionProperties } = params;\n    const proposal = this.client.proposal.get(id);\n    let { pairingTopic, proposer, requiredNamespaces, optionalNamespaces } = proposal;\n    pairingTopic = pairingTopic || \"\";\n    if (!isValidObject(requiredNamespaces)) {\n      requiredNamespaces = getRequiredNamespacesFromNamespaces(namespaces, \"approve()\");\n    }\n\n    const selfPublicKey = await this.client.core.crypto.generateKeyPair();\n    const peerPublicKey = proposer.publicKey;\n    const sessionTopic = await this.client.core.crypto.generateSharedKey(\n      selfPublicKey,\n      peerPublicKey,\n    );\n\n    if (pairingTopic && id) {\n      await this.client.core.pairing.updateMetadata({\n        topic: pairingTopic,\n        metadata: proposer.metadata,\n      });\n      await this.sendResult<\"wc_sessionPropose\">(id, pairingTopic, {\n        relay: {\n          protocol: relayProtocol ?? \"irn\",\n        },\n        responderPublicKey: selfPublicKey,\n      });\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      await this.client.core.pairing.activate({ topic: pairingTopic });\n    }\n\n    const sessionSettle = {\n      relay: { protocol: relayProtocol ?? \"irn\" },\n      namespaces,\n      requiredNamespaces,\n      optionalNamespaces,\n      pairingTopic,\n      controller: { publicKey: selfPublicKey, metadata: this.client.metadata },\n      expiry: calcExpiry(SESSION_EXPIRY),\n      ...(sessionProperties && { sessionProperties }),\n    };\n    await this.client.core.relayer.subscribe(sessionTopic);\n    await this.sendRequest(sessionTopic, \"wc_sessionSettle\", sessionSettle);\n    const session = {\n      ...sessionSettle,\n      topic: sessionTopic,\n      pairingTopic,\n      acknowledged: false,\n      self: sessionSettle.controller,\n      peer: {\n        publicKey: proposer.publicKey,\n        metadata: proposer.metadata,\n      },\n      controller: selfPublicKey,\n    };\n    await this.client.session.set(sessionTopic, session);\n    await this.setExpiry(sessionTopic, calcExpiry(SESSION_EXPIRY));\n    return {\n      topic: sessionTopic,\n      acknowledged: () => new Promise((resolve) => resolve(this.client.session.get(sessionTopic))),\n    };\n  };\n\n  public reject: IEngine[\"reject\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidReject(params);\n    const { id, reason } = params;\n    const { pairingTopic } = this.client.proposal.get(id);\n    if (pairingTopic) {\n      await this.sendError(id, pairingTopic, reason);\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n    }\n  };\n\n  public update: IEngine[\"update\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidUpdate(params);\n    const { topic, namespaces } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionUpdate\", { namespaces });\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_update\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.client.session.update(topic, { namespaces });\n\n    return { acknowledged };\n  };\n\n  public extend: IEngine[\"extend\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidExtend(params);\n    const { topic } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionExtend\", {});\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_extend\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.setExpiry(topic, calcExpiry(SESSION_EXPIRY));\n\n    return { acknowledged };\n  };\n\n  public request: IEngine[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    this.isInitialized();\n    await this.isValidRequest(params);\n    const { chainId, request, topic, expiry } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionRequest\", { request, chainId }, expiry);\n    const { done, resolve, reject } = createDelayedPromise<T>(expiry);\n    this.events.once<\"session_request\">(engineEvent(\"session_request\", id), ({ error, result }) => {\n      if (error) reject(error);\n      else resolve(result);\n    });\n    this.client.events.emit(\"session_request_sent\", { topic, request, chainId, id });\n    return await done();\n  };\n\n  public respond: IEngine[\"respond\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidRespond(params);\n    const { topic, response } = params;\n    const { id } = response;\n    if (isJsonRpcResult(response)) {\n      await this.sendResult(id, topic, response.result);\n    } else if (isJsonRpcError(response)) {\n      await this.sendError(id, topic, response.error);\n    }\n    this.deletePendingSessionRequest(params.response.id, { message: \"fulfilled\", code: 0 });\n  };\n\n  public ping: IEngine[\"ping\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidPing(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      const id = await this.sendRequest(topic, \"wc_sessionPing\", {});\n      const { done, resolve, reject } = createDelayedPromise<void>();\n      this.events.once(engineEvent(\"session_ping\", id), ({ error }) => {\n        if (error) reject(error);\n        else resolve();\n      });\n      await done();\n    } else if (this.client.core.pairing.pairings.keys.includes(topic)) {\n      await this.client.core.pairing.ping({ topic });\n    }\n  };\n\n  public emit: IEngine[\"emit\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidEmit(params);\n    const { topic, event, chainId } = params;\n    await this.sendRequest(topic, \"wc_sessionEvent\", { event, chainId });\n  };\n\n  public disconnect: IEngine[\"disconnect\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidDisconnect(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      await this.sendRequest(topic, \"wc_sessionDelete\", getSdkError(\"USER_DISCONNECTED\"));\n      await this.deleteSession(topic);\n    } else {\n      await this.client.core.pairing.disconnect({ topic });\n    }\n  };\n\n  public find: IEngine[\"find\"] = (params) => {\n    this.isInitialized();\n    return this.client.session.getAll().filter((session) => isSessionCompatible(session, params));\n  };\n\n  public getPendingSessionRequests: IEngine[\"getPendingSessionRequests\"] = () => {\n    this.isInitialized();\n    return this.client.pendingRequest.getAll();\n  };\n\n  // ---------- Private Helpers --------------------------------------- //\n\n  private deleteSession: EnginePrivate[\"deleteSession\"] = async (topic, expirerHasDeleted) => {\n    const { self } = this.client.session.get(topic);\n    // Await the unsubscribe first to avoid deleting the symKey too early below.\n    await this.client.core.relayer.unsubscribe(topic);\n    await Promise.all([\n      this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\")),\n      this.client.core.crypto.deleteKeyPair(self.publicKey),\n      this.client.core.crypto.deleteSymKey(topic),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(topic),\n    ]);\n  };\n\n  private deleteProposal: EnginePrivate[\"deleteProposal\"] = async (id, expirerHasDeleted) => {\n    await Promise.all([\n      this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\")),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(id),\n    ]);\n  };\n\n  private deletePendingSessionRequest: EnginePrivate[\"deletePendingSessionRequest\"] = async (\n    id,\n    reason,\n    expirerHasDeleted = false,\n  ) => {\n    await Promise.all([\n      this.client.pendingRequest.delete(id, reason),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(id),\n    ]);\n  };\n\n  private setExpiry: EnginePrivate[\"setExpiry\"] = async (topic, expiry) => {\n    if (this.client.session.keys.includes(topic)) {\n      await this.client.session.update(topic, { expiry });\n    }\n    this.client.core.expirer.set(topic, expiry);\n  };\n\n  private setProposal: EnginePrivate[\"setProposal\"] = async (id, proposal) => {\n    await this.client.proposal.set(id, proposal);\n    this.client.core.expirer.set(id, proposal.expiry);\n  };\n\n  private setPendingSessionRequest: EnginePrivate[\"setPendingSessionRequest\"] = async (\n    pendingRequest: PendingRequestTypes.Struct,\n  ) => {\n    const expiry = ENGINE_RPC_OPTS.wc_sessionRequest.req.ttl;\n    const { id, topic, params } = pendingRequest;\n    await this.client.pendingRequest.set(id, {\n      id,\n      topic,\n      params,\n    });\n    if (expiry) this.client.core.expirer.set(id, calcExpiry(expiry));\n  };\n\n  private sendRequest: EnginePrivate[\"sendRequest\"] = async (topic, method, params, expiry) => {\n    const payload = formatJsonRpcRequest(method, params);\n    if (isBrowser() && METHODS_TO_VERIFY.includes(method)) {\n      const hash = hashMessage(JSON.stringify(payload));\n      await this.client.core.verify.register({ attestationId: hash });\n    }\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const opts = ENGINE_RPC_OPTS[method].req;\n    if (expiry) opts.ttl = expiry;\n    this.client.core.history.set(topic, payload);\n    this.client.core.relayer.publish(topic, message, opts);\n    return payload.id;\n  };\n\n  private sendResult: EnginePrivate[\"sendResult\"] = async (id, topic, result) => {\n    const payload = formatJsonRpcResult(id, result);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.core.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    // await is intentionally omitted to speed up performance\n    this.client.core.relayer.publish(topic, message, opts);\n    await this.client.core.history.resolve(payload);\n  };\n\n  private sendError: EnginePrivate[\"sendError\"] = async (id, topic, error) => {\n    const payload = formatJsonRpcError(id, error);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.core.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    // await is intentionally omitted to speed up performance\n    this.client.core.relayer.publish(topic, message, opts);\n    await this.client.core.history.resolve(payload);\n  };\n\n  private cleanup: EnginePrivate[\"cleanup\"] = async () => {\n    const sessionTopics: string[] = [];\n    const proposalIds: number[] = [];\n    this.client.session.getAll().forEach((session) => {\n      if (isExpired(session.expiry)) sessionTopics.push(session.topic);\n    });\n    this.client.proposal.getAll().forEach((proposal) => {\n      if (isExpired(proposal.expiry)) proposalIds.push(proposal.id);\n    });\n    await Promise.all([\n      ...sessionTopics.map((topic) => this.deleteSession(topic)),\n      ...proposalIds.map((id) => this.deleteProposal(id)),\n    ]);\n  };\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n\n  // ---------- Relay Events Router ----------------------------------- //\n\n  private registerRelayerEvents() {\n    this.client.core.relayer.on(\n      RELAYER_EVENTS.message,\n      async (event: RelayerTypes.MessageEvent) => {\n        const { topic, message } = event;\n\n        // messages of certain types should be ignored as they are handled by their respective SDKs\n        if (this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(message))) {\n          return;\n        }\n\n        const payload = await this.client.core.crypto.decode(topic, message);\n\n        if (isJsonRpcRequest(payload)) {\n          this.client.core.history.set(topic, payload);\n          this.onRelayEventRequest({ topic, payload });\n        } else if (isJsonRpcResponse(payload)) {\n          await this.client.core.history.resolve(payload);\n          this.onRelayEventResponse({ topic, payload });\n        }\n      },\n    );\n  }\n\n  private onRelayEventRequest: EnginePrivate[\"onRelayEventRequest\"] = (event) => {\n    const { topic, payload } = event;\n    const reqMethod = payload.method as JsonRpcTypes.WcMethod;\n\n    switch (reqMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeRequest(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleRequest(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateRequest(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendRequest(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingRequest(topic, payload);\n      case \"wc_sessionDelete\":\n        return this.onSessionDeleteRequest(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequest(topic, payload);\n      case \"wc_sessionEvent\":\n        return this.onSessionEventRequest(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported request method ${reqMethod}`);\n    }\n  };\n\n  private onRelayEventResponse: EnginePrivate[\"onRelayEventResponse\"] = async (event) => {\n    const { topic, payload } = event;\n    const record = await this.client.core.history.get(topic, payload.id);\n    const resMethod = record.request.method as JsonRpcTypes.WcMethod;\n\n    switch (resMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeResponse(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleResponse(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateResponse(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendResponse(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingResponse(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequestResponse(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported response method ${resMethod}`);\n    }\n  };\n\n  // ---------- Relay Events Handlers --------------------------------- //\n\n  private onSessionProposeRequest: EnginePrivate[\"onSessionProposeRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      this.isValidConnect({ ...payload.params });\n      const expiry = calcExpiry(FIVE_MINUTES);\n      const proposal = { id, pairingTopic: topic, expiry, ...params };\n      await this.setProposal(id, proposal);\n      const hash = hashMessage(JSON.stringify(payload));\n      const context = await this.getVerifyContext(hash, proposal.proposer.metadata);\n      this.client.events.emit(\"session_proposal\", { id, params: proposal, context });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionProposeResponse: EnginePrivate[\"onSessionProposeResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      const { result } = payload;\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", result });\n      const proposal = this.client.proposal.get(id);\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", proposal });\n      const selfPublicKey = proposal.proposer.publicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        selfPublicKey,\n      });\n      const peerPublicKey = result.responderPublicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        peerPublicKey,\n      });\n      const sessionTopic = await this.client.core.crypto.generateSharedKey(\n        selfPublicKey,\n        peerPublicKey,\n      );\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        sessionTopic,\n      });\n      const subscriptionId = await this.client.core.relayer.subscribe(sessionTopic);\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        subscriptionId,\n      });\n      await this.client.core.pairing.activate({ topic });\n    } else if (isJsonRpcError(payload)) {\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_connect\"), { error: payload.error });\n    }\n  };\n\n  private onSessionSettleRequest: EnginePrivate[\"onSessionSettleRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      this.isValidSessionSettleRequest(params);\n      const {\n        relay,\n        controller,\n        expiry,\n        namespaces,\n        requiredNamespaces,\n        optionalNamespaces,\n        sessionProperties,\n        pairingTopic,\n      } = payload.params;\n      const session = {\n        topic,\n        relay,\n        expiry,\n        namespaces,\n        acknowledged: true,\n        pairingTopic,\n        requiredNamespaces,\n        optionalNamespaces,\n        controller: controller.publicKey,\n        self: {\n          publicKey: \"\",\n          metadata: this.client.metadata,\n        },\n        peer: {\n          publicKey: controller.publicKey,\n          metadata: controller.metadata,\n        },\n        ...(sessionProperties && { sessionProperties }),\n      };\n      await this.sendResult<\"wc_sessionSettle\">(payload.id, topic, true);\n      this.events.emit(engineEvent(\"session_connect\"), { session });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionSettleResponse: EnginePrivate[\"onSessionSettleResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      await this.client.session.update(topic, { acknowledged: true });\n      this.events.emit(engineEvent(\"session_approve\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      await this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_approve\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionUpdateRequest: EnginePrivate[\"onSessionUpdateRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      this.isValidUpdate({ topic, ...params });\n      await this.client.session.update(topic, { namespaces: params.namespaces });\n      await this.sendResult<\"wc_sessionUpdate\">(id, topic, true);\n      this.client.events.emit(\"session_update\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionUpdateResponse: EnginePrivate[\"onSessionUpdateResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionExtendRequest: EnginePrivate[\"onSessionExtendRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidExtend({ topic });\n      await this.setExpiry(topic, calcExpiry(SESSION_EXPIRY));\n      await this.sendResult<\"wc_sessionExtend\">(id, topic, true);\n      this.client.events.emit(\"session_extend\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionExtendResponse: EnginePrivate[\"onSessionExtendResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionPingRequest: EnginePrivate[\"onSessionPingRequest\"] = async (topic, payload) => {\n    const { id } = payload;\n    try {\n      this.isValidPing({ topic });\n      await this.sendResult<\"wc_sessionPing\">(id, topic, true);\n      this.client.events.emit(\"session_ping\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionPingResponse: EnginePrivate[\"onSessionPingResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    // put at the end of the stack to avoid a race condition\n    // where session_ping listener is not yet initialized\n    setTimeout(() => {\n      if (isJsonRpcResult(payload)) {\n        this.events.emit(engineEvent(\"session_ping\", id), {});\n      } else if (isJsonRpcError(payload)) {\n        this.events.emit(engineEvent(\"session_ping\", id), { error: payload.error });\n      }\n    }, 500);\n  };\n\n  private onSessionDeleteRequest: EnginePrivate[\"onSessionDeleteRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidDisconnect({ topic, reason: payload.params });\n      await Promise.all([\n        new Promise((resolve) => {\n          // RPC request needs to happen before deletion as it utalises session encryption\n          this.client.core.relayer.once(RELAYER_EVENTS.publish, async () => {\n            resolve(await this.deleteSession(topic));\n          });\n        }),\n        this.sendResult<\"wc_sessionDelete\">(id, topic, true),\n      ]);\n      this.client.events.emit(\"session_delete\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequest: EnginePrivate[\"onSessionRequest\"] = async (topic, payload) => {\n    const { id, params } = payload;\n    try {\n      this.isValidRequest({ topic, ...params });\n      await this.setPendingSessionRequest({ id, topic, params });\n      const hash = hashMessage(JSON.stringify(payload));\n      const session = this.client.session.get(topic);\n      const context = await this.getVerifyContext(hash, session.peer.metadata);\n      this.client.events.emit(\"session_request\", { id, topic, params, context });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequestResponse: EnginePrivate[\"onSessionRequestResponse\"] = (\n    _topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { result: payload.result });\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionEventRequest: EnginePrivate[\"onSessionEventRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      this.isValidEmit({ topic, ...params });\n      this.client.events.emit(\"session_event\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  // ---------- Expirer Events ---------------------------------------- //\n\n  private registerExpirerEvents() {\n    this.client.core.expirer.on(EXPIRER_EVENTS.expired, async (event: ExpirerTypes.Expiration) => {\n      const { topic, id } = parseExpirerTarget(event.target);\n      if (id && this.client.pendingRequest.keys.includes(id)) {\n        return await this.deletePendingSessionRequest(id, getInternalError(\"EXPIRED\"), true);\n      }\n\n      if (topic) {\n        if (this.client.session.keys.includes(topic)) {\n          await this.deleteSession(topic, true);\n          this.client.events.emit(\"session_expire\", { topic });\n        }\n      } else if (id) {\n        await this.deleteProposal(id, true);\n        this.client.events.emit(\"proposal_expire\", { id });\n      }\n    });\n  }\n\n  // ---------- Validation Helpers ------------------------------------ //\n  private isValidPairingTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.core.pairing.pairings.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.core.pairing.pairings.get(topic).expiry)) {\n      // await this.deletePairing(topic);\n      const { message } = getInternalError(\"EXPIRED\", `pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.session.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.session.get(topic).expiry)) {\n      await this.deleteSession(topic);\n      const { message } = getInternalError(\"EXPIRED\", `session topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionOrPairingTopic(topic: string) {\n    if (this.client.session.keys.includes(topic)) {\n      await this.isValidSessionTopic(topic);\n    } else if (this.client.core.pairing.pairings.keys.includes(topic)) {\n      this.isValidPairingTopic(topic);\n    } else if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session or pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    } else {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session or pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n  }\n\n  private async isValidProposalId(id: any) {\n    if (!isValidId(id)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `proposal id should be a number: ${id}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.proposal.keys.includes(id)) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `proposal id doesn't exist: ${id}`);\n      throw new Error(message);\n    }\n    if (isExpired(this.client.proposal.get(id).expiry)) {\n      await this.deleteProposal(id);\n      const { message } = getInternalError(\"EXPIRED\", `proposal id: ${id}`);\n      throw new Error(message);\n    }\n  }\n\n  // ---------- Validation  ------------------------------------------- //\n\n  private isValidConnect: EnginePrivate[\"isValidConnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `connect() params: ${JSON.stringify(params)}`,\n      );\n      throw new Error(message);\n    }\n    const { pairingTopic, requiredNamespaces, optionalNamespaces, sessionProperties, relays } =\n      params;\n    if (!isUndefined(pairingTopic)) await this.isValidPairingTopic(pairingTopic);\n\n    if (!isValidRelays(relays, true)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `connect() relays: ${relays}`);\n      throw new Error(message);\n    }\n\n    // validate required namespaces only if they are defined\n    if (!isUndefined(requiredNamespaces) && isValidObject(requiredNamespaces) !== 0) {\n      this.validateNamespaces(requiredNamespaces, \"requiredNamespaces\");\n    }\n\n    // validate optional namespaces only if they are defined\n    if (!isUndefined(optionalNamespaces) && isValidObject(optionalNamespaces) !== 0) {\n      this.validateNamespaces(optionalNamespaces, \"optionalNamespaces\");\n    }\n\n    // validate session properties only if they are defined\n    if (!isUndefined(sessionProperties)) {\n      this.validateSessionProps(sessionProperties, \"sessionProperties\");\n    }\n  };\n\n  private validateNamespaces = (\n    namespaces: ProposalTypes.RequiredNamespaces | ProposalTypes.OptionalNamespaces,\n    type: string,\n  ) => {\n    const validRequiredNamespacesError = isValidRequiredNamespaces(namespaces, \"connect()\", type);\n    if (validRequiredNamespacesError) throw new Error(validRequiredNamespacesError.message);\n  };\n\n  private isValidApprove: EnginePrivate[\"isValidApprove\"] = async (params) => {\n    if (!isValidParams(params))\n      throw new Error(\n        getInternalError(\"MISSING_OR_INVALID\", `approve() params: ${params}`).message,\n      );\n    const { id, namespaces, relayProtocol, sessionProperties } = params;\n    await this.isValidProposalId(id);\n    const proposal = this.client.proposal.get(id);\n    const validNamespacesError = isValidNamespaces(namespaces, \"approve()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      proposal.requiredNamespaces,\n      namespaces,\n      \"approve()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    if (!isValidString(relayProtocol, true)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `approve() relayProtocol: ${relayProtocol}`,\n      );\n      throw new Error(message);\n    }\n\n    if (!isUndefined(sessionProperties)) {\n      this.validateSessionProps(sessionProperties, \"sessionProperties\");\n    }\n  };\n\n  private isValidReject: EnginePrivate[\"isValidReject\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `reject() params: ${params}`);\n      throw new Error(message);\n    }\n    const { id, reason } = params;\n    await this.isValidProposalId(id);\n    if (!isValidErrorReason(reason)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `reject() reason: ${JSON.stringify(reason)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidSessionSettleRequest: EnginePrivate[\"isValidSessionSettleRequest\"] = (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() params: ${params}`,\n      );\n      throw new Error(message);\n    }\n    const { relay, controller, namespaces, expiry } = params;\n    if (!isValidRelay(relay)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() relay protocol should be a string`,\n      );\n      throw new Error(message);\n    }\n    const validControllerError = isValidController(controller, \"onSessionSettleRequest()\");\n    if (validControllerError) throw new Error(validControllerError.message);\n    const validNamespacesError = isValidNamespaces(namespaces, \"onSessionSettleRequest()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    if (isExpired(expiry)) {\n      const { message } = getInternalError(\"EXPIRED\", `onSessionSettleRequest()`);\n      throw new Error(message);\n    }\n  };\n\n  private isValidUpdate: EnginePrivate[\"isValidUpdate\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `update() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, namespaces } = params;\n    await this.isValidSessionTopic(topic);\n    const session = this.client.session.get(topic);\n    const validNamespacesError = isValidNamespaces(namespaces, \"update()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      session.requiredNamespaces,\n      namespaces,\n      \"update()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidExtend: EnginePrivate[\"isValidExtend\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `extend() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionTopic(topic);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidRequest: EnginePrivate[\"isValidRequest\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, request, chainId, expiry } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidRequest(request)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() ${JSON.stringify(request)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesRequest(namespaces, chainId, request.method)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() method: ${request.method}`,\n      );\n      throw new Error(message);\n    }\n    if (expiry && !isValidRequestExpiry(expiry, SESSION_REQUEST_EXPIRY_BOUNDARIES)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() expiry: ${expiry}. Expiry must be a number (in seconds) between ${SESSION_REQUEST_EXPIRY_BOUNDARIES.min} and ${SESSION_REQUEST_EXPIRY_BOUNDARIES.max}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidRespond: EnginePrivate[\"isValidRespond\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `respond() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, response } = params;\n    await this.isValidSessionTopic(topic);\n    if (!isValidResponse(response)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `respond() response: ${JSON.stringify(response)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidPing: EnginePrivate[\"isValidPing\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `ping() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n\n  private isValidEmit: EnginePrivate[\"isValidEmit\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, event, chainId } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidEvent(event)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesEvent(namespaces, chainId, event.name)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidDisconnect: EnginePrivate[\"isValidDisconnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `disconnect() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n\n  private getVerifyContext = async (hash: string, metadata: CoreTypes.Metadata) => {\n    const context: Verify.Context = {\n      verified: {\n        verifyUrl: metadata.verifyUrl || \"\",\n        validation: \"UNKNOWN\",\n        origin: metadata.url || \"\",\n      },\n    };\n\n    try {\n      const origin = await this.client.core.verify.resolve({\n        attestationId: hash,\n        verifyUrl: metadata.verifyUrl,\n      });\n\n      context.verified.origin = origin;\n      context.verified.validation = origin === metadata.url ? \"VALID\" : \"INVALID\";\n    } catch (e) {\n      this.client.logger.error(e);\n    }\n\n    this.client.logger.info(`Verify context: ${JSON.stringify(context)}`);\n    return context;\n  };\n\n  private validateSessionProps = (properties: ProposalTypes.SessionProperties, type: string) => {\n    Object.values(properties).forEach((property) => {\n      if (!isValidString(property, false)) {\n        const { message } = getInternalError(\n          \"MISSING_OR_INVALID\",\n          `${type} must be in Record<string, string> format. Received: ${JSON.stringify(property)}`,\n        );\n        throw new Error(message);\n      }\n    });\n  };\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, ProposalTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, PROPOSAL_CONTEXT } from \"../constants\";\n\nexport class Proposal extends Store<number, ProposalTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, PROPOSAL_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, SessionTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, SESSION_CONTEXT } from \"../constants\";\n\nexport class Session extends Store<string, SessionTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, SESSION_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, PendingRequestTypes } from \"@walletconnect/types\";\nimport { REQUEST_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX } from \"../constants\";\n\nexport class PendingRequest extends Store<number, PendingRequestTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(\n      core,\n      logger,\n      REQUEST_CONTEXT,\n      SIGN_CLIENT_STORAGE_PREFIX,\n      (val: PendingRequestTypes.Struct) => val.id,\n    );\n  }\n}\n","import { Core } from \"@walletconnect/core\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n  pino,\n} from \"@walletconnect/logger\";\nimport { SignClientTypes, ISignClient, ISignClientEvents, EngineTypes } from \"@walletconnect/types\";\nimport { getAppMetadata } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport { SIGN_CLIENT_DEFAULT, SIGN_CLIENT_PROTOCOL, SIGN_CLIENT_VERSION } from \"./constants\";\nimport { Engine, PendingRequest, Proposal, Session } from \"./controllers\";\n\nexport class SignClient extends ISignClient {\n  public readonly protocol = SIGN_CLIENT_PROTOCOL;\n  public readonly version = SIGN_CLIENT_VERSION;\n  public readonly name: ISignClient[\"name\"] = SIGN_CLIENT_DEFAULT.name;\n  public readonly metadata: ISignClient[\"metadata\"];\n\n  public core: ISignClient[\"core\"];\n  public logger: ISignClient[\"logger\"];\n  public events: ISignClient[\"events\"] = new EventEmitter();\n  public engine: ISignClient[\"engine\"];\n  public session: ISignClient[\"session\"];\n  public proposal: ISignClient[\"proposal\"];\n  public pendingRequest: ISignClient[\"pendingRequest\"];\n\n  static async init(opts?: SignClientTypes.Options) {\n    const client = new SignClient(opts);\n    await client.initialize();\n\n    return client;\n  }\n\n  constructor(opts?: SignClientTypes.Options) {\n    super(opts);\n\n    this.name = opts?.name || SIGN_CLIENT_DEFAULT.name;\n    this.metadata = opts?.metadata || getAppMetadata();\n\n    const logger =\n      typeof opts?.logger !== \"undefined\" && typeof opts?.logger !== \"string\"\n        ? opts.logger\n        : pino(getDefaultLoggerOptions({ level: opts?.logger || SIGN_CLIENT_DEFAULT.logger }));\n\n    this.core = opts?.core || new Core(opts);\n    this.logger = generateChildLogger(logger, this.name);\n    this.session = new Session(this.core, this.logger);\n    this.proposal = new Proposal(this.core, this.logger);\n    this.pendingRequest = new PendingRequest(this.core, this.logger);\n    this.engine = new Engine(this);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get pairing() {\n    return this.core.pairing.pairings;\n  }\n\n  // ---------- Events ----------------------------------------------- //\n\n  public on: ISignClientEvents[\"on\"] = (name, listener) => {\n    return this.events.on(name, listener);\n  };\n\n  public once: ISignClientEvents[\"once\"] = (name, listener) => {\n    return this.events.once(name, listener);\n  };\n\n  public off: ISignClientEvents[\"off\"] = (name, listener) => {\n    return this.events.off(name, listener);\n  };\n\n  public removeListener: ISignClientEvents[\"removeListener\"] = (name, listener) => {\n    return this.events.removeListener(name, listener);\n  };\n\n  public removeAllListeners: ISignClientEvents[\"removeAllListeners\"] = (name) => {\n    return this.events.removeAllListeners(name);\n  };\n\n  // ---------- Engine ----------------------------------------------- //\n\n  public connect: ISignClient[\"connect\"] = async (params) => {\n    try {\n      return await this.engine.connect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public pair: ISignClient[\"pair\"] = async (params) => {\n    try {\n      return await this.engine.pair(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public approve: ISignClient[\"approve\"] = async (params) => {\n    try {\n      return await this.engine.approve(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public reject: ISignClient[\"reject\"] = async (params) => {\n    try {\n      return await this.engine.reject(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public update: ISignClient[\"update\"] = async (params) => {\n    try {\n      return await this.engine.update(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public extend: ISignClient[\"extend\"] = async (params) => {\n    try {\n      return await this.engine.extend(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public request: ISignClient[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    try {\n      return await this.engine.request<T>(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public respond: ISignClient[\"respond\"] = async (params) => {\n    try {\n      return await this.engine.respond(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public ping: ISignClient[\"ping\"] = async (params) => {\n    try {\n      return await this.engine.ping(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public emit: ISignClient[\"emit\"] = async (params) => {\n    try {\n      return await this.engine.emit(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public disconnect: ISignClient[\"disconnect\"] = async (params) => {\n    try {\n      return await this.engine.disconnect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public find: ISignClient[\"find\"] = (params) => {\n    try {\n      return this.engine.find(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public getPendingSessionRequests: ISignClient[\"getPendingSessionRequests\"] = () => {\n    try {\n      return this.engine.getPendingSessionRequests();\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async initialize() {\n    this.logger.trace(`Initialized`);\n    try {\n      await this.core.start();\n      await this.session.init();\n      await this.proposal.init();\n      await this.pendingRequest.init();\n      await this.engine.init();\n      this.core.verify.init({ verifyUrl: this.metadata.verifyUrl });\n      this.logger.info(`SignClient Initialization Success`);\n    } catch (error: any) {\n      this.logger.info(`SignClient Initialization Failure`);\n      this.logger.error(error.message);\n      throw error;\n    }\n  }\n}\n","import { SignClient as Client } from \"./client\";\n\nexport * from \"./constants\";\n\nexport const SignClient = Client;\nexport default Client;\n"],"names":["THIRTY_DAYS","SEVEN_DAYS","FIVE_MINUTES","ONE_DAY","THIRTY_SECONDS","IEngine","client","ENGINE_CONTEXT","EventEmmiter","TYPE_1","ENGINE_RPC_OPTS","params","connectParams","__spreadProps","__spreadValues","pairingTopic","requiredNamespaces","optionalNamespaces","sessionProperties","relays","topic","uri","active","newTopic","newUri","publicKey","proposal","RELAYER_DEFAULT_PROTOCOL","reject","resolve","approval","createDelayedPromise","PROPOSAL_EXPIRY_MESSAGE","engineEvent","error","session","completeSession","message","getInternalError","id","expiry","calcExpiry","relayProtocol","namespaces","proposer","isValidObject","getRequiredNamespacesFromNamespaces","selfPublicKey","peerPublicKey","sessionTopic","getSdkError","sessionSettle","SESSION_EXPIRY","reason","acknowledged","chainId","request","done","result","response","isJsonRpcResult","isJsonRpcError","event","isSessionCompatible","expirerHasDeleted","self","pendingRequest","method","payload","formatJsonRpcRequest","isBrowser","METHODS_TO_VERIFY","hash","hashMessage","opts","formatJsonRpcResult","record","formatJsonRpcError","sessionTopics","proposalIds","isExpired","reqMethod","resMethod","context","err","subscriptionId","relay","controller","_topic","RELAYER_EVENTS","isValidParams","isUndefined","isValidRelays","type","validRequiredNamespacesError","isValidRequiredNamespaces","validNamespacesError","isValidNamespaces","conformingNamespacesError","isConformingNamespaces","isValidString","isValidErrorReason","isValidRelay","validControllerError","isValidController","isValidNamespacesChainId","isValidRequest","isValidNamespacesRequest","isValidRequestExpiry","SESSION_REQUEST_EXPIRY_BOUNDARIES","isValidResponse","isValidEvent","isValidNamespacesEvent","metadata","origin","e","properties","property","isJsonRpcRequest","isJsonRpcResponse","EXPIRER_EVENTS","parseExpirerTarget","isValidId","Store","core","logger","PROPOSAL_CONTEXT","SIGN_CLIENT_STORAGE_PREFIX","SESSION_CONTEXT","REQUEST_CONTEXT","val","SignClient","ISignClient","SIGN_CLIENT_PROTOCOL","SIGN_CLIENT_VERSION","SIGN_CLIENT_DEFAULT","EventEmitter","name","listener","getAppMetadata","pino","getDefaultLoggerOptions","Core","generateChildLogger","Session","Proposal","PendingRequest","Engine","getLoggerContext","Client"],"mappings":"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"}